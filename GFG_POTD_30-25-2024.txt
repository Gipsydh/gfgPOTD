Given two strings, s1 and s2, count the number of subsequences of string s1 equal to string s2.

Return the total count modulo 1e9+7.

Example 1:

Input: s1 = geeksforgeeks, s2 = gks
Output: 4
Explaination: We can pick characters from s1 as a subsequence from indices {0,3,4}, {0,3,12}, {0,11,12} and {8,11,12}.So total 4 subsequences of s1 that are equal to s2.

CODE:

class Solution {
  public:
    int countWays(string s1, string s2) {
        // code here
        int n=s1.size(),m=s2.size(),mod=1e9+7;
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        for(int i=0;i<=n;i++){
            dp[0][i]=1;
        }
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(s2[i-1]==s1[j-1])dp[i][j]=(dp[i-1][j-1]+dp[i][j-1])%mod;
                else dp[i][j]=dp[i][j-1]%mod;
            }
        }
        return dp[m][n]%mod;
    }
};
